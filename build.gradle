import org.gradle.api.attributes.plugin.GradlePluginApiVersion

plugins {
    id 'java-gradle-plugin'
    id 'maven-publish'
}

group = 'dev.lukebemish'
version = '2.0.0-beta.6'

['apiElements', 'runtimeElements'].each {
    configurations.named(it).configure {
        attributes {
            attribute(
                GradlePluginApiVersion.GRADLE_PLUGIN_API_VERSION_ATTRIBUTE,
                objects.named(GradlePluginApiVersion, gradle.gradleVersion)
            )
        }
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    api 'dev.lukebemish.central-portal-publishing:dev.lukebemish.central-portal-publishing.gradle.plugin:0.1.3'
}

gradlePlugin {
    plugins {
        managedVersioning {
            id = 'dev.lukebemish.managedversioning'
            implementationClass = 'dev.lukebemish.managedversioning.ManagedVersioningPlugin'
        }
    }
}

@UntrackedTask(because = "Must print to the console to capture the version")
abstract class PrintVersionNameTask extends DefaultTask {
    @javax.inject.Inject
    protected abstract ExecOperations getExecOperations()

    @Input
    abstract Property<String> getProjectVersion()

    @TaskAction
    void printVersionName() {
        execOperations.exec {
            commandLine 'echo', "GRADLE_VERSION=(${projectVersion.get()})"
        }
    }
}

tasks.register('printVersionName', PrintVersionNameTask) {
    projectVersion = project.version
}

java.withSourcesJar()
java.withJavadocJar()
java.toolchain.languageVersion.set JavaLanguageVersion.of(21)

processResources {
    from rootProject.file('LICENSE')
}

publishing {
    repositories {
        if (System.getenv('MAVEN_URL')) {
            maven {
                name = "ReleaseMaven"
                url = System.getenv('MAVEN_URL')
                credentials {
                    username = System.getenv('MAVEN_USER') ?: ''
                    password = System.getenv('MAVEN_PASSWORD') ?: ''
                }
            }
        }
    }
}
